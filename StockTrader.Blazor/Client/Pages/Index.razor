@page "/"
@using StockTrader.Approaches
@using StockTrader.Blazor.Client.Components.Views

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

@*<AlgorithmSelector AvailableAlgorithms="Selections" />*@

@*<br />
    <StockSelector @bind-Selections="Selections" />
    <br />
    <br />
    @if (Selections != null)
    {
        foreach (var item in Selections)
        {
            <div>@item</div>
        }
    }

    <SfCalendar TValue="DateTime?"></SfCalendar>

    <SfGrid DataSource="@EmployeeData"></SfGrid>*@

@code{
    //public class Employee
    //{
    //    public int EmployeeID { get; set; }
    //    public string Name { get; set; }
    //    public string Designation { get; set; }
    //    public DateTime DOJ { get; set; }
    //    public double Salary { get; set; }
    //}

    protected List<AlgorithmDefinition> Selections { get; set; }

    //public List<Employee> EmployeeData { get; set; }

    protected override void OnInitialized()
    {
        //EmployeeData = Enumerable.Range(1, 75).Select(x => new Employee()
        //{
        //    EmployeeID = 1000 + x,
        //    Name = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
        //    Designation = (new string[] { "CMBKIO", "ERIOPL", "EWOPHL", "WWIOPPS", "MLOPSSJ" })[new Random().Next(5)],
        //    DOJ = DateTime.Now.AddDays(-x),
        //    Salary = 20000 * x
        //}).ToList();

        Selections = new List<AlgorithmDefinition> {
            new AlgorithmDefinition
            {
                Id = Guid.NewGuid(),
                Name = "TestAlgo1",
                SellDefinition = false,
                Parameters = new List<AlgorithmParameter> {
                new AlgorithmParameter
                {
                    Name ="Param 1",
                    NumericValue = 200
                },
                new AlgorithmParameter
                {
                    Name ="Param 2",
                    NumericValue = 4.25
                }
                }
            },
            new AlgorithmDefinition
            {
                Id = Guid.NewGuid(),
                Name = "TestAlgo2",
                SellDefinition = true,
                Parameters = new List<AlgorithmParameter> {
                new AlgorithmParameter
                {
                    Name ="Param 3",
                    NumericValue = 2.0671
                },
                new AlgorithmParameter
                {
                    Name ="Param 4",
                    ValueIsBoolean = true,
                    BooleanValue = true

                }
                }
            },

        };

    }

}